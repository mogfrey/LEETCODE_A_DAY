You are given an integer array height of length n. There are n vertical lines drawn such that the two endpoints of the ith line are (i, 0) and (i, height[i]).

Find two lines that together with the x-axis form a container, such that the container contains the most water.

Return the maximum amount of water a container can store.

Notice that you may not slant the container.

class Solution:
    def maxArea(self, height: List[int]) -> int:
        left,right=0,len(height)-1
        origin = 0
        while left < right:
            print("right",right)
            print("left",left)
            axis=right - left
            if height[left] < height[right]:
                volume = axis * height[left]
                left +=1
            else:
                volume = axis * height[right]
                right -=1
            print("volume",volume)
            if volume > origin:
                origin=volume
                print("origin",origin)
        return origin
